static class BankAccount {
    private String accountNumber;
    private String accountHolderName;
    private double balance;

    public BankAccount(String accountNumber, String accountHolderName, double initialBalance) {
        this.accountNumber = accountNumber;
        this.accountHolderName = accountHolderName;
        this.balance = initialBalance;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getAccountHolderName() {
        return accountHolderName;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: " + amount);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }

    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Withdrawn: " + amount);
        } else {
            System.out.println("Invalid withdraw amount.");
        }
    }

    public void displayAccountDetails() {
        System.out.println("Account Number: " + accountNumber);
        System.out.println("Account Holder: " + accountHolderName);
        System.out.println("Balance: " + balance);
    }
}

private HashMap<String, BankAccount> accounts;

public BankManager() {
    accounts = new HashMap<>();
}

public void createAccount(String accountNumber, String accountHolderName, double initialBalance) {
    if (!accounts.containsKey(accountNumber)) {
        BankAccount account = new BankAccount(accountNumber, accountHolderName, initialBalance);
        accounts.put(accountNumber, account);
        System.out.println("Account created successfully.");
    } else {
        System.out.println("Account with this number already exists.");
    }
}

public void deposit(String accountNumber, double amount) {
    BankAccount account = accounts.get(accountNumber);
    if (account != null) {
        account.deposit(amount);
    } else {
        System.out.println("Account not found.");
    }
}

public void withdraw(String accountNumber, double amount) {
    BankAccount account = accounts.get(accountNumber);
    if (account != null) {
        account.withdraw(amount);
    } else {
        System.out.println("Account not found.");
    }
}

public void displayAccountDetails(String accountNumber) {
    BankAccount account = accounts.get(accountNumber);
    if (account != null) {
        account.displayAccountDetails();
    } else {
        System.out.println("Account not found.");
    }
}

public static void main(String[] args) {
    BankManager manager = new BankManager();
    Scanner scanner = new Scanner(System.in);
    boolean exit = false;

    while (!exit) {
        System.out.println("\nBank Manager");
        System.out.println("1. Create Account");
        System.out.println("2. Deposit");
        System.out.println("3. Withdraw");
        System.out.println("4. View Account Details");
        System.out.println("5. Exit");
        System.out.print("Enter your choice: ");
        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        switch (choice) {
            case 1:
                System.out.print("Enter account number: ");
                String accountNumber = scanner.nextLine();
                System.out.print("Enter account holder name: ");
                String accountHolderName = scanner.nextLine();
                System.out.print("Enter initial balance: ");
                double initialBalance = scanner.nextDouble();
                manager.createAccount(accountNumber, accountHolderName, initialBalance);
                break;
            case 2:
                System.out.print("Enter account number: ");
                accountNumber = scanner.nextLine();
                System.out.print("Enter amount to deposit: ");
                double depositAmount = scanner.nextDouble();
                manager.deposit(accountNumber, depositAmount);
                break;
            case 3:
                System.out.print("Enter account number: ");
                accountNumber = scanner.nextLine();
                System.out.print("Enter amount to withdraw: ");
                double withdrawAmount = scanner.nextDouble();
                manager.withdraw(accountNumber, withdrawAmount);
                break;
            case 4:
                System.out.print("Enter account number: ");
                accountNumber = scanner.nextLine();
                manager.displayAccountDetails(accountNumber);
                break;
            case 5:
                exit = true;
                break;
            default:
                System.out.println("Invalid choice.");
        }
    }
    scanner.close();
}
